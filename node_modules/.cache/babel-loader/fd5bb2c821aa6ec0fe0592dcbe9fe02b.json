{"ast":null,"code":"var _jsxFileName = \"D:\\\\FoodShades\\\\FoodShades\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const nameRef = useRef();\n  const streetRef = useRef();\n  const postalRef = useRef();\n  const cityRef = useRef();\n  const [nameIsValid, setNameIsValid] = useState(true);\n  const [streetIsValid, setStreetIsValid] = useState(true);\n  const [postalIsValid, setPostalIsValid] = useState(true);\n  const [cityIsValid, setCityIsValid] = useState(true);\n\n  const isNotEmpty = value => {\n    return value.trim() !== '';\n  };\n\n  const hasSixChars = value => value.trim().length === 6;\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredNameValue = nameRef.current.value;\n    const enteredStreetValue = streetRef.current.value;\n    const enteredPostalValue = postalRef.current.value;\n    const enteredCityValue = cityRef.current.value;\n    const enteredNameisValid = isNotEmpty(enteredNameValue);\n    const enteredStreetisValid = isNotEmpty(enteredStreetValue);\n    const enteredPostalisValid = hasSixChars(enteredPostalValue);\n    const enteredCityisValid = isNotEmpty(enteredCityValue);\n    setNameIsValid(enteredNameisValid);\n    setStreetIsValid(enteredStreetisValid);\n    setPostalIsValid(enteredPostalisValid);\n    setCityIsValid(enteredCityisValid);\n    const formIsValid = enteredNameisValid && enteredStreetisValid && enteredPostalisValid && enteredCityisValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredNameValue,\n      street: enteredStreetValue,\n      city: enteredCityValue,\n      postal: enteredPostalValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${nameIsValid ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !nameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name field can not be left Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${streetIsValid ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !streetIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street field can not be left Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${postalIsValid ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !postalIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Postal field is Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${cityIsValid ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !cityIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City field can not be left Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}; // Cancel button is converted to type button and CONFIRM Button is the submit button. On confirm will\n// submit the form which will send the user data by calling finalSubmitOrderHandler in <Cart>\n\n\n_s(Checkout, \"Uj9Mlub76Wa7pRFR8F22u9R4tY0=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/FoodShades/FoodShades/src/Components/Cart/Checkout.js"],"names":["useRef","useState","classes","Checkout","props","nameRef","streetRef","postalRef","cityRef","nameIsValid","setNameIsValid","streetIsValid","setStreetIsValid","postalIsValid","setPostalIsValid","cityIsValid","setCityIsValid","isNotEmpty","value","trim","hasSixChars","length","confirmHandler","event","preventDefault","enteredNameValue","current","enteredStreetValue","enteredPostalValue","enteredCityValue","enteredNameisValid","enteredStreetisValid","enteredPostalisValid","enteredCityisValid","formIsValid","onConfirm","name","street","city","postal","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import {useRef , useState} from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const nameRef = useRef();\r\n    const streetRef = useRef();\r\n    const postalRef = useRef();\r\n    const cityRef = useRef();\r\n\r\n    const [nameIsValid , setNameIsValid] = useState(true);\r\n    const [streetIsValid , setStreetIsValid] = useState(true);\r\n    const [postalIsValid , setPostalIsValid] = useState(true);\r\n    const [cityIsValid , setCityIsValid] = useState(true);\r\n\r\n    const isNotEmpty = value => {\r\n        return value.trim() !== '' ;\r\n    }\r\n    const hasSixChars = value => value.trim().length === 6;\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredNameValue = nameRef.current.value;\r\n    const enteredStreetValue = streetRef.current.value;\r\n    const enteredPostalValue = postalRef.current.value;\r\n    const enteredCityValue = cityRef.current.value;\r\n\r\n    const enteredNameisValid = isNotEmpty(enteredNameValue);\r\n    const enteredStreetisValid = isNotEmpty(enteredStreetValue);\r\n    const enteredPostalisValid = hasSixChars(enteredPostalValue);\r\n    const enteredCityisValid = isNotEmpty(enteredCityValue);\r\n\r\n        setNameIsValid(enteredNameisValid);\r\n        setStreetIsValid(enteredStreetisValid);\r\n        setPostalIsValid(enteredPostalisValid);\r\n        setCityIsValid(enteredCityisValid);\r\n\r\n    const formIsValid = enteredNameisValid && enteredStreetisValid && enteredPostalisValid && enteredCityisValid;\r\n    if (!formIsValid){\r\n        return;\r\n    }\r\n    props.onConfirm({\r\n        name: enteredNameValue,\r\n        street : enteredStreetValue,\r\n        city : enteredCityValue,\r\n        postal : enteredPostalValue\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${nameIsValid ? '' : classes.invalid }`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameRef} />\r\n        {!nameIsValid && <p>Name field can not be left Empty</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${streetIsValid ? '' : classes.invalid }`}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetRef} />\r\n        {!streetIsValid && <p>Street field can not be left Empty</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${postalIsValid ? '' : classes.invalid }`}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalRef}/>\r\n        {!postalIsValid && <p>Postal field is Invalid</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${cityIsValid ? '' : classes.invalid }`}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityRef}/>\r\n        {!cityIsValid && <p>City field can not be left Empty</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n// Cancel button is converted to type button and CONFIRM Button is the submit button. On confirm will\r\n// submit the form which will send the user data by calling finalSubmitOrderHandler in <Cart>\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}