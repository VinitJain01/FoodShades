{"ast":null,"code":"var _jsxFileName = \"D:\\\\FoodShades\\\\FoodShades\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styles from \"./AvailableMeals.module.css\";\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [mealsArr, setMealsArr] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [errorOccuredInFetching, setErrorOccuredInFetching] = useState(); // To have the error mssg in this variable\n\n  useEffect(() => {\n    setisLoading(true);\n\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-app-fff65-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something Went Wrong');\n      }\n\n      const responseData = await response.json(); // To convert json into JS object\n      // responseData is again a promise/ handler to the obj\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMealsArr(loadedMeals);\n      setisLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      const errorMessage = error.message;\n      setisLoading(false);\n      setErrorOccuredInFetching(errorMessage);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (errorOccuredInFetching) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorOccuredInFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = mealsArr.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    mealName: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)); // mealsList is our arr of mealItems\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AvailableMeals, \"4Gd6LotKbwf94FxhxiYMqPEU2Ns=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/FoodShades/FoodShades/src/Components/Meals/AvailableMeals.js"],"names":["useEffect","useState","styles","Card","MealItem","AvailableMeals","mealsArr","setMealsArr","isLoading","setisLoading","errorOccuredInFetching","setErrorOccuredInFetching","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","errorMessage","message","mealsLoading","mealsError","mealsList","map","meal","meals"],"mappings":"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","sourcesContent":["import {useEffect , useState} from 'react' ;\r\nimport styles from \"./AvailableMeals.module.css\";\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const [mealsArr , setMealsArr] = useState([]);\r\n  const [isLoading , setisLoading] = useState(false);\r\n  const [errorOccuredInFetching , setErrorOccuredInFetching] = useState(); // To have the error mssg in this variable\r\n\r\n  useEffect( () =>{\r\n      setisLoading(true);\r\n      const fetchMeals = async() => {\r\n          const response = await fetch('https://react-app-fff65-default-rtdb.firebaseio.com/meals.json');\r\n\r\n          if(!response.ok){\r\n            throw new Error('Something Went Wrong');\r\n          }\r\n          const responseData = await response.json();   // To convert json into JS object\r\n            // responseData is again a promise/ handler to the obj\r\n          const loadedMeals = [];\r\n\r\n          for (const key in responseData) {\r\n            loadedMeals.push({\r\n              id : key,\r\n              name : responseData[key].name,\r\n              description : responseData[key].description,\r\n              price : responseData[key].price,\r\n            });\r\n          }\r\n          setMealsArr(loadedMeals);\r\n          setisLoading(false);\r\n    };\r\n\r\n      fetchMeals().catch( (error) => {\r\n        const errorMessage = error.message ;\r\n      setisLoading(false);\r\n      setErrorOccuredInFetching(errorMessage);\r\n      } );\r\n  } , []);\r\n\r\n  if(isLoading){\r\n    return <section className={styles.mealsLoading} >\r\n      <p>Loading.....</p>\r\n    </section>;\r\n  }\r\n  if(errorOccuredInFetching){\r\n    return <section className={styles.mealsError} >\r\n      <p>{errorOccuredInFetching}</p>\r\n    </section>;\r\n  }\r\n\r\n    const mealsList = mealsArr.map(meal => \r\n    <MealItem key={meal.id} id={meal.id} mealName={meal.name} description={meal.description} price={meal.price} />)\r\n    // mealsList is our arr of mealItems\r\n    return <section className={styles.meals}>\r\n        <Card>\r\n            <ul>\r\n                {mealsList}\r\n            </ul>\r\n        </Card>\r\n    </section>\r\n}\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}