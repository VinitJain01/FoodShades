{"ast":null,"code":"var _jsxFileName = \"D:\\\\FoodShades\\\\FoodShades\\\\src\\\\Components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport styles from './MealItemForm.module.css';\nimport Input from \"../../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  const amountInputRef = useRef();\n  const [isAmountValid, setIsAmountValid] = useState(true);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; // Since input always returns a string. \n    //Convert it in number.\n\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length == 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setIsAmountValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Amount\",\n      input: {\n        ref: amountInputRef,\n        type: 'number',\n        id: 'amount_' + props.id,\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isAmountValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MealItemForm, \"+REFKGvZFNkUTaig0zJg9XuVU1g=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["D:/FoodShades/FoodShades/src/Components/Meals/MealItem/MealItemForm.js"],"names":["useRef","useState","styles","Input","MealItemForm","props","amountInputRef","isAmountValid","setIsAmountValid","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","ref","type","id","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAMC,cAAc,GAAGN,MAAM,EAA7B;AACA,QAAM,CAACO,aAAD,EAAiBC,gBAAjB,IAAqCP,QAAQ,CAAC,IAAD,CAAnD;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGN,cAAc,CAACO,OAAf,CAAuBC,KAA7C,CAH6B,CAGuB;AACpD;;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AACA,QAAGA,aAAa,CAACI,IAAd,GAAqBC,MAArB,IAAgC,CAAhC,IAAqCF,mBAAmB,GAAC,CAAzD,IAA8DA,mBAAmB,GAAC,CAArF,EAAwF;AACpFP,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACH;;AAEDH,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACH,GAZD;;AAaA,sBAAQ;AAAM,IAAA,SAAS,EAAEb,MAAM,CAACiB,IAAxB;AAA8B,IAAA,QAAQ,EAAEV,aAAxC;AAAA,4BACJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AACzBW,QAAAA,GAAG,EAACd,cADqB;AAEzBe,QAAAA,IAAI,EAAC,QAFoB;AAGzBC,QAAAA,EAAE,EAAC,YAAWjB,KAAK,CAACiB,EAHK;AAIzBC,QAAAA,GAAG,EAAC,GAJqB;AAKzBC,QAAAA,GAAG,EAAC,GALqB;AAMzBC,QAAAA,IAAI,EAAC,GANoB;AAOzBC,QAAAA,YAAY,EAAC;AAPY;AAA7B;AAAA;AAAA;AAAA;AAAA,YADI,eAUJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVI,EAWH,CAACnB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXf;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAaH,CA/BD;;GAAMH,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import { useRef , useState} from 'react';\r\nimport styles from './MealItemForm.module.css';\r\nimport Input from \"../../UI/Input\";\r\n\r\nconst MealItemForm = props => {\r\n\r\n    const amountInputRef = useRef();\r\n    const [isAmountValid , setIsAmountValid] = useState(true);\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const enteredAmount = amountInputRef.current.value; // Since input always returns a string. \r\n        //Convert it in number.\r\n        const enteredAmountNumber = +enteredAmount;\r\n        if(enteredAmount.trim().length ==  0 || enteredAmountNumber<1 || enteredAmountNumber>5 ){\r\n            setIsAmountValid(false);\r\n            return;\r\n        }\r\n\r\n        props.onAddToCart(enteredAmountNumber);\r\n    }\r\n    return (<form className={styles.form} onSubmit={submitHandler} >\r\n        <Input label=\"Amount\" input={{\r\n            ref:amountInputRef,\r\n            type:'number',\r\n            id:'amount_' +props.id ,\r\n            min:'1',\r\n            max:'5',\r\n            step:'1',\r\n            defaultValue:'1'\r\n        }}/>\r\n        <button>+ Add</button>\r\n        {!isAmountValid && <p>Please enter a valid amount (1-5)</p>}\r\n    </form>);\r\n}\r\n\r\nexport default MealItemForm;"]},"metadata":{},"sourceType":"module"}